{"ast":null,"code":"var _jsxFileName = \"/home/iman/Desktop/New Repo/Phoenix/client/src/components/Blogs.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { browserHistory } from 'react-router';\n\nclass Blogs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        // return <Redirect to ='Profile' />\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"Profile/\",\n            state: {\n              newbook: this.state.newbook\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      books: [],\n      search: \"\",\n      newbook: \"\",\n      redirect: false\n    };\n  }\n\n  Search(event) {\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"blogs/\").then(data => data.json()).then(data => {\n      console.log(data);\n      this.setState({\n        books: data\n      });\n    });\n  }\n\n  prof() {\n    console.log(this.state.newbook);\n    this.setState({\n      redirect: true\n    });\n  }\n\n  render() {\n    let filtered = this.state.books.filter(book => {\n      return book.country.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.renderRedirect(), React.createElement(\"input\", {\n      icon: \"search\",\n      label: \"Search Country\",\n      onChange: this.Search.bind(this),\n      placeholder: \"Sarch for country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), filtered.map(book => React.createElement(\"div\", {\n      key: book.id,\n      onClick: e => {\n        this.setState({\n          newbook: book\n        }, () => {\n          this.prof();\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: book.image,\n      width: \"100\",\n      height: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), \"name : \", book.UserId, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"title :\", book.title, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), \"country:\", book.country, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \"Blog:\", book.Blog)));\n  }\n\n}\n\nexport default Blogs;","map":{"version":3,"sources":["/home/iman/Desktop/New Repo/Phoenix/client/src/components/Blogs.js"],"names":["React","Redirect","browserHistory","Blogs","Component","constructor","props","renderRedirect","state","redirect","pathname","newbook","books","search","Search","event","setState","target","value","componentDidMount","fetch","then","data","json","console","log","prof","render","filtered","filter","book","country","toLowerCase","indexOf","bind","map","id","e","image","UserId","title","Blog"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { browserHistory } from 'react-router';\n\nclass Blogs extends React.Component{\n    constructor(props){\n          super(props);\n        this.state = {\n          books: [],\n          search:\"\"\t,\n          newbook:\"\",\n          redirect:false\t\n        }\n    }\n    Search(event){\n      this.setState({\n        search : event.target.value\n      })\n    }\n    componentDidMount(){\n      fetch(\"blogs/\")\n        .then(data => data.json())\n        .then((data) => {\n           console.log(data)\n          this.setState({ books: data })\n         })\n      }\n    prof(){\n      console.log(this.state.newbook)\n      this.setState({\n        redirect:true\n      })\n    }\n\n    renderRedirect = () =>{\n      if(this.state.redirect){\n        // return <Redirect to ='Profile' />\n        return <Redirect to = {{\n          pathname:\"Profile/\",\n          state:{newbook:this.state.newbook}\n        }} />\n      }\n    }\n\n     render(){\n       let filtered =this.state.books.filter(\n         (book) =>{\n           return book.country.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n         }\n       )\n      return(<div>\n            {this.renderRedirect()}\n            <input icon=\"search\" label=\"Search Country\" onChange= {this.Search.bind(this)} placeholder=\"Sarch for country\" />\n              {filtered.map(book =>\n                \n                <div key={book.id} onClick = {(e) => {\n                  this.setState({newbook:book},()=>{\n                    this.prof()\n                  });\n                }}>\n                  <img src={book.image} width=\"100\" height=\"100\"/><br />\n                  name : {book.UserId}<br/>\n                  title :{book.title}<br />\n                  country:{book.country}<br />\n                  Blog:{book.Blog}\n                </div>\n                )}\n             \n                \n        </div>\n    )}\n  }\n  \n  export default Blogs;\n  "]},"metadata":{},"sourceType":"module"}